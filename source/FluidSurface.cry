class FluidSurface {
	constructor(width, height) {
		this.width = width;
		this.height = height;
		
		this.grid = make_grid(width, height, 1.0);
		this.grid[4][4] = 1.5;
		this.base_rgb = [100, 200, 255];
		this.ripple = make_grid(width, height, 0.0);
	}
	
	function update_ripple(rc) {
		width = this.width;
		height = this.height;
		ripple = this.ripple;
		
		// 3 random points in the grid
		pt1x = width * .35;
		pt1y = height * .35;
		pt2x = width * .80;
		pt2y = height * .20;
		pt3x = width * .63;
		pt3y = height * .71;
		
		for (y = 0; y < height; ++y) {
			for (x = 0; x < width; ++x) {
				
				dx = x - pt1x;
				dy = y - pt1y;
				func1 = $cos(.05 * rc + (dx ** 2 + dy ** 2) ** .5) * .1;
				
				dx = x - pt2x;
				dy = y - pt2y;
				func2 = $cos(.05 * rc + (dx ** 2 + dy ** 2) ** .5) * .1;
				
				dx = x - pt3x;
				dy = y - pt3y;
				func3 = $cos(.05 * rc + (dx ** 2 + dy ** 2) ** .5) * .1;
				
				ripple[x][y] = 2 * (func1 + func2 + func3);
			}
		}
	}
	
	function render(rc, origin_x, origin_y) {
		height = this.height;
		width = this.width;
		grid = this.grid;
		rgb = this.base_rgb;
		ripple = this.ripple;
		/*
			a
		  b | c
		    d(PT)
		*/
		
		for (y = 1; y < height; ++y) {
			for (x = 1; x < width; ++x) {
				az = grid[x - 1][y - 1];
				bz = grid[x - 1][y];
				cz = grid[x][y -  1];
				dz = grid[x][y];
				
				az += ripple[x - 1][y - 1];
				bz += ripple[x - 1][y];
				cz += ripple[x][y - 1];
				dz += ripple[x][y];
				
				px = origin_x + (x * 40) - (y * 40);
				py = origin_y + (x + y) * 20;
				
				if (rc == 0) {
					$print(x + ', ' + y + ': (' + px + ', ' + py + ') ' + dz);
				}
				
				r = rgb[0];
				g = rgb[1];
				b = rgb[2];
				
				color_ratio = (dz - az);
				r1 = r * color_ratio;
				g1 = g * color_ratio;
				
				if (r1 > 255) r1 = 255;
				else if (r1 < 0) r1 = 0;
				if (g1 > 255) g1 = 255;
				else if (g1 < 0) g1 = 0;
				
				// left triangle: top, left, bottom
				// right triangle: top, right, bottom
				$gfx_draw_triangle(
					px, py - $floor(az * 20),
					px - 40, py - $floor(bz * 20) + 20,
					px, py - $floor(dz * 20) + 40,
					$floor(r1),
					$floor(g1),
					255,
					255);
					
					
				$gfx_draw_triangle(
					px, py - $floor(az * 20),
					px + 40, py - $floor(cz * 20) + 20,
					px, py - $floor(dz * 20) + 40,
					$floor(r1),
					$floor(g1),
					255,
					255);
			}
		}
	}
}
